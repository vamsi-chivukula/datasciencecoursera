Command Line Interface has the following parts:

'command' 'flags' 'arguments'

command -> is the CLI command that does a specific task
flag -> is the option to get certain behavior of the command, preceeded by a -
argument -> option for the command, it is something that the command is going to modify

CLI commands introduced in the video:

pwd    -> stands for 'print working directory'. Outputs the working directory
clear  -> clears all the commands in the CLI
ls     -> used to list all the folders and files in the current directory
ls -a  -> lists all the folders including the hidden ones
ls -al -> lists details of hidden and unhidden files and folders. '-a' and '-l' are flags; they can be combined to the flag -al
cd     -> stands for 'change directory'. It takes the path of the directory as argument and changes the working directory to that folder
cd     -> with no argument changes the working directory to home directory
cd ..  -> changes the directory to one level above the working directory
mkdir  -> stands for 'make directory'. 'mkdir' takes the name of the new folder as the argument
touch  -> creates an empty file. 'touch' takes the name of the empty file as an argument
cp     -> stands for copy. It takes 2 arguments - First is the name of the file to be copied, Second is the path of the target directory
cp -r  -> '-r' flag is used to copy the contents of entire directory into a different directory. The first argument is the directory whose files have to be copied, second is the target directory
rm     -> stands for 'remove'. It takes the name of the file to be deleted as the argument.
          'rm' can be used to delete directories by adding '-r' flag and giving the name of the directory as an argument.
          THERE IS NO UNDO FOR 'rm'
mv     -> stands for 'move'. It takes 2 arguments - First is the name of the file to be moved, Second is the path of the target directory
          'mv' can also be used to rename file. First argument will be the name of the file to be renamed, Second is the new name of the file
echo   -> echo will print any argument that follows
date   -> prints the date

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Introduction to Git

$git config --global user.name "Your username"
$git config --global user.email "Your email"
Above are the commands that are used to configure the Git account

$git config --list
It is a command that can used to confirm the changes

$git init
is a command to initialize a local repository on the computer

$git remote add origin https://github.com/vamsichivukula/test-repo.git
links up the local repo and repo on github.com

$git clone https://github.com/vamsichivukula/repoName.git
cloning makes a local copy of the remote repo

git add .
This command lets git know that you want Git to track the new files that have been created

git add -u
updates changes to files, adding deleting, changing names etc.

git add -A
does both the previous action in one command

git commit -m "message"
commits changes to LOCAL repo. "message" is a description of what has been done

git push
commits the change to remote repo on github when in the same directory

git checkout -b branchname
creates another version of the same directory, in order to make edits to it. default is master, but
various branches can be created to edit code etc.

git branch
used to see what branc we are on

git checkout master
used to switch back to the master branch